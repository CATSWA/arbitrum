[Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 0), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4), Instruction(0x34, CALLVALUE, 0, 0, 1, 2, Get deposited value by the instruction/transaction responsible for this execution., None, 5), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 16, 8), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 11), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 12), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 14), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 15), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 16), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 17), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 18), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 20), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 21), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 278, 22), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 25), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 26), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 28), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 29), Instruction(0x1c, SHR, 0, 2, 1, 3, Logical shift right., None, 31), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 32), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2563230774, 33), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 38), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 162, 39), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 42), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 43), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3387115640, 44), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 49), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 113, 50), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 53), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 54), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3387115640, 55), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 60), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1288, 61), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 64), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 65), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3681895458, 66), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 71), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1360, 72), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 75), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 76), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3919052797, 77), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 82), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1485, 83), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 86), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 87), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4023599809, 88), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 93), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1493, 94), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 97), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 98), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 99), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 104), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1547, 105), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 108), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 278, 109), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 112), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 113), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 114), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2563230774, 115), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 120), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 808, 121), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 124), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 125), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2578790304, 126), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 131), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 858, 132), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 135), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 136), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2640428954, 137), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 142), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1196, 143), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 146), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 147), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3122138195, 148), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 153), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1242, 154), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 157), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 278, 158), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 161), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 162), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 163), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1683779502, 164), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 169), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 233, 170), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 173), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 174), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1683779502, 175), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 180), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 519, 181), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 184), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 185), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1711155723, 186), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 191), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 563, 192), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 195), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 196), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1822401950, 197), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 202), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 599, 203), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 206), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 207), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1959761765, 208), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 213), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 607, 214), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 217), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 218), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2047709066, 219), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 224), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 800, 225), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 228), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 278, 229), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 232), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 233), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 234), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 138979596, 235), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 240), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 283, 241), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 244), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 245), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1064018965, 246), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 251), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 388, 252), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 255), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 256), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1525008615, 257), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 262), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 426, 263), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 266), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 267), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1565488962, 268), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 273), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 511, 274), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 277), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 278), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 279), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 281), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 282), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 283), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 284), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 287), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 289), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 290), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 291), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 256, 292), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 295), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 296), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 297), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 306, 298), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 301), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 302), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 304), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 305), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 306), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 307), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 308), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 310), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 312), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 314), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 315), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 316), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 317), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 318), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 319), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 320), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 321), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 323), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 324), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 325), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 326), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 327), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 328), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 329), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 330), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 332), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 333), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 334), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 335), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 336), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 338), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 339), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 340), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 341), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 342), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 344), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 345), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 346), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 347), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 348), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 350), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 351), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 352), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 353), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 192, 354), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 356), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 357), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 358), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 359), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 360), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 362), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 363), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1576, 364), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 367), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 368), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 369), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 371), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 372), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 373), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 374), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 375), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 376), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 377), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 378), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 379), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 380), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 381), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 382), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 383), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 385), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 386), Instruction(0xf3, RETURN, 0, 2, 0, 0, Halt execution returning output data., None, 387), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 388), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 389), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 392), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 394), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 395), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 396), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 397), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 399), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 400), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 401), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 410, 402), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 405), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 406), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 408), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 409), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 410), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 411), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 412), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 413), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 415), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 417), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 419), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 420), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 421), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2008, 422), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 425), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 426), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 427), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 430), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 432), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 433), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 434), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 256, 435), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 438), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 439), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 440), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 449, 441), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 444), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 445), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 447), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 448), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 449), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 450), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 451), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 453), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 455), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 457), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 458), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 459), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 460), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 461), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 462), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 463), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 464), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 466), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 467), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 468), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 469), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 470), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 471), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 472), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 474), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 475), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 476), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 477), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 478), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 479), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 481), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 482), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 483), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 484), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 485), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 487), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 488), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 489), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 490), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 491), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 493), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 494), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 495), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 496), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 192, 497), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 499), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 500), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 501), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 502), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 503), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 505), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 506), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2029, 507), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 510), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 511), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 512), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3230, 515), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 518), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 519), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 520), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 523), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 525), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 526), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 527), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 528), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 530), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 531), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 532), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 541, 533), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 536), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 537), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 539), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 540), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 541), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 542), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 543), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 544), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 545), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 546), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 548), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 549), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 550), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 552), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 554), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 556), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 557), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 558), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4162, 559), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 562), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 563), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 571, 564), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4349, 567), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 570), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 571), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 572), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 574), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 575), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 576), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 578), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 580), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 582), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 583), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 584), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 585), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 586), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 587), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 588), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 589), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 590), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 591), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 592), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 593), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 594), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 596), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 597), Instruction(0xf3, RETURN, 0, 2, 0, 0, Halt execution returning output data., None, 598), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 599), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 571, 600), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4364, 603), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 606), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 607), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 608), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 611), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 613), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 614), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 615), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 616), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 618), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 619), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 620), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 629, 621), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 624), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 625), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 627), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 628), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 629), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 630), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 632), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 634), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 636), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 637), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 638), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 639), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 640), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 641), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 642), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 643), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 645), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 646), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 647), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 648), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 649), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 650), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 651), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 652), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 654), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 655), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 656), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 657), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 658), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 659), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 660), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 661), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 662), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 664), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 665), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 666), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 668), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 669), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 670), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 671), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 673), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 675), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 676), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 677), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 678), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 687, 679), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 682), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 683), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 685), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 686), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 687), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 688), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 689), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 690), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 691), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 693), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 694), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 695), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 696), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 705, 697), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 700), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 701), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 703), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 704), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 705), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 706), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 707), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 708), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 709), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 711), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 712), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 713), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 714), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 716), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 717), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 718), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 719), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 720), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 721), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 723), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 725), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 726), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 727), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 728), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 729), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 738, 730), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 733), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 734), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 736), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 737), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 738), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 739), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 740), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 741), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 742), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 743), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 745), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 746), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 748), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 749), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 751), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 752), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 753), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 754), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 755), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 757), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 758), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 759), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 760), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 761), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 762), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 763), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 764), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 765), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 766), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 768), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 769), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 770), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 771), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 773), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 774), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 775), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 776), Instruction(0x37, CALLDATACOPY, 0, 3, 0, 3, Copy input data in current environment to memory., None, 777), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 778), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 780), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 781), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 782), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 783), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 784), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 785), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 786), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 787), Instruction(0x95, SWAP, 0, 7, 7, 3, Exchange 1st and 7th stack items., None, 788), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 789), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4379, 790), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 793), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 794), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 795), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 796), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 797), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 798), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 799), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 800), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 571, 801), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4739, 804), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 807), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 808), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 809), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 812), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 814), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 815), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 816), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 817), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 819), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 820), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 821), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 830, 822), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 825), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 826), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 828), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 829), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 830), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 831), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 832), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 834), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 836), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 838), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 839), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 840), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 841), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 842), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 843), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 844), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 846), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 847), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 848), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 849), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 850), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 852), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 853), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4754, 854), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 857), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 858), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 859), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 862), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 864), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 865), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 866), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 867), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 869), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 870), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 871), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 880, 872), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 875), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 876), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 878), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 879), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 880), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 881), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 883), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 885), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 887), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 888), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 889), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 890), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 891), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 892), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 893), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 894), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 896), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 897), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 898), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 899), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 900), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 901), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 902), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 903), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 905), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 906), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 907), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 908), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 909), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 911), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 912), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 913), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 914), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 915), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 917), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 919), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 920), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 921), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 922), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 923), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 924), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 925), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 926), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 927), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 192, 928), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 930), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 931), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 932), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 934), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 935), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 936), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 937), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 939), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 941), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 942), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 943), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 944), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 953, 945), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 948), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 949), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 951), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 952), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 953), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 954), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 955), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 956), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 957), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 959), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 960), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 961), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 962), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 971, 963), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 966), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 967), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 969), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 970), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 971), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 972), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 973), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 974), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 975), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 977), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 978), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 979), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 980), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 982), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 983), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 984), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 985), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 986), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 987), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 989), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 991), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 992), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 993), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 994), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 995), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1004, 996), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 999), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1000), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1002), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1003), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1004), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1005), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1006), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1007), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1008), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1009), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 1011), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1012), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1014), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1015), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1017), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1018), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1019), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1020), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1021), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1023), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1024), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1025), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1026), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1027), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1028), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1029), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1030), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1031), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1032), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1034), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1035), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1036), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1037), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 1039), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1040), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1041), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1042), Instruction(0x37, CALLDATACOPY, 0, 3, 0, 3, Copy input data in current environment to memory., None, 1043), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1044), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1046), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1047), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1048), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1049), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1050), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1051), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1052), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1053), Instruction(0x95, SWAP, 0, 7, 7, 3, Exchange 1st and 7th stack items., None, 1054), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 1055), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1056), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1057), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1059), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1060), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1061), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1062), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1063), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1064), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1065), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1066), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1067), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1069), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1071), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1072), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1073), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1074), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1083, 1075), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1078), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1079), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1081), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1082), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1083), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1084), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1085), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1086), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1087), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1089), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1090), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1091), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1092), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1101, 1093), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1096), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1097), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1099), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1100), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1101), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1102), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1103), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1104), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1105), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1107), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1108), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1109), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1110), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1112), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 1113), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1114), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1115), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1116), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1117), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1119), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1121), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1122), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1123), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 1124), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1125), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1134, 1126), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1129), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1130), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1132), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1133), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1134), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1135), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1136), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1137), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1138), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1139), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 1141), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1142), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1144), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1145), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1147), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1148), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1149), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1150), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1151), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1153), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1154), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1155), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1156), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1157), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1158), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1159), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1160), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1161), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1162), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1164), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1165), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1166), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1167), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 1169), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1170), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1171), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1172), Instruction(0x37, CALLDATACOPY, 0, 3, 0, 3, Copy input data in current environment to memory., None, 1173), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1174), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1176), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1177), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1178), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1179), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1180), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1181), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1182), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1183), Instruction(0x95, SWAP, 0, 7, 7, 3, Exchange 1st and 7th stack items., None, 1184), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1185), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5771, 1186), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 1189), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1190), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1191), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1192), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1193), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1194), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1195), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1196), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 1197), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1200), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1202), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 1203), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1204), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1205), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1207), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1208), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1209), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1218, 1210), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1213), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1214), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1216), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1217), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1218), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1219), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1220), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1222), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1224), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1226), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1227), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1228), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1229), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1230), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1231), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1232), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1233), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1235), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1236), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1237), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6130, 1238), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1241), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1242), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 1243), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1246), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1248), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 1249), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1250), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1251), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1253), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1254), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1255), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1264, 1256), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1259), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1260), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1262), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1263), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1264), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1265), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1266), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1268), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1270), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1272), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1273), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1274), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1275), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1276), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1277), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1278), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1279), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1281), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1282), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1283), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6287, 1284), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1287), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1288), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 1289), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1292), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1294), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 1295), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1296), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 192, 1297), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1299), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1300), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1301), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1310, 1302), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1305), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1306), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1308), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1309), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1310), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1311), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1312), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1314), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1316), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1318), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1319), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1320), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1321), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1322), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1323), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1324), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1325), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1327), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1328), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1329), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1330), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1331), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1332), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1333), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1335), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1336), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1337), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1338), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1339), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 1340), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1342), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1343), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1344), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1345), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 1346), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1348), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1349), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1350), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1351), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1352), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1354), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1355), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6444, 1356), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1359), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1360), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 1361), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1364), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1366), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 1367), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1368), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 1369), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1371), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1372), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1373), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1382, 1374), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1377), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1378), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1380), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1381), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1382), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1383), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1384), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1385), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1386), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1388), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1389), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1390), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1391), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1392), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1394), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1396), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1397), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1398), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1399), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1408, 1400), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1403), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1404), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1406), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1407), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1408), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1409), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1410), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1411), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1412), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1414), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1415), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1416), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1417), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1426, 1418), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1421), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1422), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1424), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1425), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1426), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1427), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1428), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1429), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1430), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1432), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1433), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1434), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1435), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1437), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 1438), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1439), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1440), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1441), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1442), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1444), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1446), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1447), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 1448), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 1449), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1450), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1459, 1451), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1454), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1455), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1457), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1458), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1459), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1460), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1461), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1462), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1463), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1464), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1465), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1467), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1469), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1471), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1472), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1473), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1474), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1475), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1476), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1477), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1479), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1480), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7471, 1481), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1484), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1485), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 1486), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8143, 1489), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1492), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1493), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 368, 1494), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1497), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1499), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 1500), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1501), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 1502), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1504), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1505), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1506), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1515, 1507), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1510), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1511), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1513), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1514), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1515), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1516), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1517), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1519), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1521), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1523), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1524), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1525), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1526), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1527), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1528), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1529), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1530), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1532), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1533), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1534), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1535), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1536), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1537), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1538), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1539), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1541), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1542), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8191, 1543), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1546), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1547), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 571, 1548), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1551), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1553), Instruction(0x36, CALLDATASIZE, 0, 0, 1, 2, Get size of input data in current environment., None, 1554), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1555), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1556), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1558), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1559), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1560), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1569, 1561), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1564), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1565), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1567), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1568), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1569), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1570), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 1571), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8767, 1572), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 1575), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1576), Instruction(0x69, PUSH, 10, 0, 1, 3, Place 10-byte item on stack., 379900274673308559962995, 1577), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 176, 1588), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1590), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1591), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1593), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1594), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1595), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 1596), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1598), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1600), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 66091360056728588837171336519962676612515632458147627600000562373560729829522, 1601), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 1634), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1635), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1637), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1639), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1641), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1642), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1643), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 1644), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 1645), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1654, 1646), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1649), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1650), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1652), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1653), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1654), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 1655), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1656), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1658), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1660), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1662), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1663), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1664), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 1665), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1666), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1668), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1670), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1672), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1673), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1674), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 1675), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1676), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1678), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1680), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1682), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1683), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1684), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2265727597, 1685), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1690), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1692), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1693), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 1694), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1699), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 1700), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1702), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1703), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1704), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1705), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1707), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1708), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1710), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1712), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1713), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1714), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1715), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1716), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 1717), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1718), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 1719), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1720), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1721), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1722), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1731, 1723), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1726), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1727), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1729), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1730), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1731), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1732), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 1733), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 1734), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1735), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1736), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1737), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1751, 1738), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1741), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 1742), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1743), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1745), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 1746), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 1747), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1748), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1750), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1751), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1752), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1753), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1754), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1755), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1756), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1758), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 1759), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1760), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1762), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1763), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1764), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1773, 1765), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1768), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1769), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1771), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1772), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1773), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1774), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1775), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 1776), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 1778), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1779), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1781), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1782), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 206004651, 1783), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 225, 1788), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1790), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1791), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1792), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1793), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1794), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1795), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1797), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1799), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 1801), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1802), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1803), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1804), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1805), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1806), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 40404669318037827017051240996296604135428851426689995688464111482581415815038, 1807), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1840), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 1841), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1842), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 1843), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1844), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 1845), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1846), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 1847), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1848), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 1849), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1850), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 1851), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 1852), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1853), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1854), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1855), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 1856), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1857), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 412009302, 1858), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1863), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 1864), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1866), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1867), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1868), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1869), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1870), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1872), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 1873), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1874), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 1875), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1876), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1877), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1878), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1879), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 1880), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1881), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 1882), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1883), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1884), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1885), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1894, 1886), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1889), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1890), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1892), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1893), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1894), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1895), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 1896), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 1897), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1898), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1899), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1900), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1914, 1901), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1904), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 1905), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1906), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1908), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 1909), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 1910), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1911), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1913), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1914), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1915), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1916), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1917), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1918), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1919), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1921), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 1922), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1923), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1925), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 1926), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 1927), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 1936, 1928), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 1931), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 1932), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1934), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 1935), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 1936), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1937), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1938), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 1939), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 1941), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1942), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 1943), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 1944), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1945), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 1946), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 1948), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1949), Instruction(0x96, SWAP, 0, 8, 8, 3, Exchange 1st and 8th stack items., None, 1950), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1951), Instruction(0x96, SWAP, 0, 8, 8, 3, Exchange 1st and 8th stack items., None, 1952), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1953), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 1954), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 1955), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1956), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 1957), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1958), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 1959), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1960), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 1961), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 1963), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1964), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1965), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1966), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 1967), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1968), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 1969), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 1971), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1972), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1973), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 1974), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 1976), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1977), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1978), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 192, 1979), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 1981), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1982), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 1983), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 1984), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1985), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 1986), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1987), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 1988), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 1989), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 1991), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 1992), Instruction(0xa4, LOG, 0, 6, 0, 1875, Append log record with four topics., None, 1993), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1994), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 1995), Instruction(0x98, SWAP, 0, 10, 10, 3, Exchange 1st and 10th stack items., None, 1997), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 1998), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 1999), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2000), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2001), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2002), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2003), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2004), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2005), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2006), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 2007), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2008), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2009), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2011), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2013), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2014), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2015), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2016), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2017), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2018), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2019), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2021), Instruction(0x20, SHA3, 0, 2, 1, 30, Compute Keccak-256 hash., None, 2022), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 2023), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 2024), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2026), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2027), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 2028), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2029), Instruction(0x68, PUSH, 9, 0, 1, 3, Place 9-byte item on stack., 649434325459806597817, 2030), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 185, 2040), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2042), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2043), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2045), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2046), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2047), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 2048), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2050), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2052), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 84667391378384032548618684671753130020421863106249010872878842542535005285833, 2053), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 2086), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2087), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2089), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2091), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2093), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2094), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2095), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 2096), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 2097), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2106, 2098), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2101), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2102), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2104), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2105), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2106), Instruction(0x65, PUSH, 6, 0, 1, 3, Place 6-byte item on stack., 87352729236083, 2107), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 208, 2114), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2116), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2117), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2119), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2120), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2121), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 2122), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2124), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2126), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2127), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2129), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2130), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2131), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8892, 2133), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2136), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 2137), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2138), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2139), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2140), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2141), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 2142), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2143), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2145), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2146), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 811635673, 2147), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 225, 2152), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2154), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2155), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2156), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 2157), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2159), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2160), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 2161), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2162), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2163), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2164), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2165), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2166), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2168), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2170), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2172), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2173), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2174), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2175), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2176), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2177), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2178), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 2179), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2181), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2182), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2183), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 2184), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2185), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1623271346, 2186), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2191), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 2192), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2194), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2195), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2196), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2197), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 2198), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2199), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2200), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2201), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2202), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2203), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2204), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2205), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2206), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 2207), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2208), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 2209), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2210), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2211), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2212), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2221, 2213), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2216), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2217), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2219), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2220), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2221), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2222), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 2223), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 2224), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2225), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2226), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2227), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2241, 2228), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2231), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2232), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2233), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2235), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 2236), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2237), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2238), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2240), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2241), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2242), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2243), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2244), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2245), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2246), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2248), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2249), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2250), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2252), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 2253), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 2254), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2256), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2257), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2258), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2259), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 2260), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 2262), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2263), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2264), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2265), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2266), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2268), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 2269), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2271), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2272), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2273), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2282, 2274), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2277), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2278), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2280), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2281), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2282), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2283), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2284), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2285), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2287), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2288), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2289), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2290), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2291), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2293), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2294), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 2295), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2296), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 2297), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2298), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2299), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2300), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2301), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2302), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 2303), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2304), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2306), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2308), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2309), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2310), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2311), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2320, 2312), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2315), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2316), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2318), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2319), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2320), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2321), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2322), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2323), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2324), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2325), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2327), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2328), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 2329), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2330), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2331), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2332), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2341, 2333), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2336), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2337), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2339), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2340), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2341), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2342), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2343), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 2344), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2345), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2347), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2348), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2349), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2350), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2351), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2352), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2354), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2356), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2357), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2358), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 2359), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2360), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2369, 2361), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2364), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2365), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2367), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2368), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2369), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2370), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2371), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2372), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2373), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2374), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2375), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2377), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2378), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2379), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2380), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2381), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2382), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2383), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2384), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2385), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2386), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2387), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2388), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2390), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2391), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2392), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2393), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2394), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2414, 2395), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2398), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2399), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2400), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2401), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2402), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2403), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2404), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2405), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2406), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2407), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2409), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2390, 2410), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 2413), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2414), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2415), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2416), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2417), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2418), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2419), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2420), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2421), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2422), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2424), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2425), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2427), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2428), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2429), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2430), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2432), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 2433), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2434), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2435), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2436), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 2437), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2438), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2440), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2442), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2443), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2444), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2445), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2454, 2446), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2449), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2450), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2452), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2453), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2454), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2455), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2456), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2457), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2458), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2459), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2461), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2462), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 2463), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2464), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2465), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2466), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2475, 2467), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2470), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2471), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2473), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2474), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2475), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2476), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2477), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 2478), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2479), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2481), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2482), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2483), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2484), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2485), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2486), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2488), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2490), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2491), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 2492), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 2493), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2494), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2503, 2495), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2498), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2499), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2501), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2502), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2503), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2504), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2505), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2506), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2507), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2508), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2509), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2511), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2512), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2513), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2514), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2515), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2516), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2517), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2518), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2519), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2520), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2521), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2522), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2524), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2525), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2526), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2527), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2528), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2548, 2529), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2532), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2533), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2534), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2535), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2536), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2537), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2538), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2539), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2540), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2541), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2543), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2524, 2544), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 2547), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2548), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2549), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2550), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2551), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2552), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2553), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2554), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2555), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2556), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2558), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2559), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2560), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2561), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2562), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2563), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2564), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2565), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2566), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2567), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 2568), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2569), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2570), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2572), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2573), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2574), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2575), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2581, 2576), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2579), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 2580), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2581), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2582), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2584), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2585), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2587), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2588), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2589), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2590), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2592), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2594), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2596), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2597), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2598), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2599), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2600), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2601), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2603), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2605), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2607), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2608), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2609), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2610), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2611), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2612), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2613), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 2614), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2615), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2616), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2618), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2619), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2620), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2621), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2627, 2622), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2625), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 2626), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2627), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2628), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2630), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2631), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2633), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2634), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2635), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2636), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2638), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2640), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2642), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2643), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2644), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2645), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2646), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2647), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2649), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2651), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2653), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2654), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2655), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2656), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2657), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2658), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2659), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 2660), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2661), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2662), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2664), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2665), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2666), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2667), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2673, 2668), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2671), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 2672), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2673), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2674), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2676), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2677), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2679), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2680), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2681), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2682), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2683), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2684), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2685), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 2686), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2687), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 5, 2688), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2690), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2691), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2692), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2693), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2699, 2694), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2697), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 2698), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2699), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2700), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2702), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2703), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2705), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2706), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2707), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2708), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2709), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2710), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2711), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 2712), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2713), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 6, 2714), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2716), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2717), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2718), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2719), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2725, 2720), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2723), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 2724), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2725), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2726), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2728), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2729), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2730), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2731), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2732), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2733), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2734), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2735), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2736), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2737), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2738), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2739), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2740), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 2741), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 2743), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2744), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2746), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2747), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 206004651, 2748), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 225, 2753), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2755), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2756), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2757), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2758), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2759), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2760), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2762), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2764), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2766), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2767), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2768), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2769), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2770), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2771), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 412009302, 2772), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 2777), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 2778), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2780), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 2781), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2782), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 2783), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2784), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2785), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2786), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2787), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2788), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 2789), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2790), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 2791), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2792), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2793), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2794), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2803, 2795), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2798), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2799), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2801), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2802), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2803), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2804), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 2805), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 2806), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2807), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2808), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2809), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2823, 2810), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2813), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2814), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2815), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2817), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 2818), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2819), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2820), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2822), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2823), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2824), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2825), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2826), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2827), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2828), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2830), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2831), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2832), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2834), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2835), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2836), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2845, 2837), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2840), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2841), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2843), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2844), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2845), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2846), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2847), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2848), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2849), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2850), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2851), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 7, 2852), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2854), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2855), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2856), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2862, 2857), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2860), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 2861), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2862), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2863), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2865), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2866), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 2867), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2868), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2869), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2870), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2871), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2872), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2873), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 2874), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 2876), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2877), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2879), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2881), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2883), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2884), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2885), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3284753531, 2886), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 2891), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2892), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2894), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2895), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 2896), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2901), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 2902), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2904), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2905), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2906), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 2907), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2909), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2910), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 2911), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2912), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 2913), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2914), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 2916), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 2917), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2918), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2919), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2920), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2922), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2924), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2925), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 2926), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2927), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2928), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 2929), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2930), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 2931), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2932), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2933), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2934), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2943, 2935), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2938), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2939), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2941), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2942), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2943), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2944), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 2945), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 2946), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2947), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2948), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2949), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2963, 2950), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2953), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2954), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2955), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2957), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 2958), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2959), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2960), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2962), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2963), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2964), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2965), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2966), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2967), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 2968), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2970), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 2971), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 2972), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2974), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 2975), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 2976), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 2985, 2977), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 2980), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 2981), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 2983), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 2984), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 2985), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 2986), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 2987), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2988), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 2990), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 2992), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 2994), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 2995), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2996), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 2997), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 2998), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 2999), Instruction(0x8f, DUP, 0, 16, 17, 3, Duplicate 16th stack item., None, 3000), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3001), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3002), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3004), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3005), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3006), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8924, 3008), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3011), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 3012), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3013), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3014), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3015), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3016), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 3017), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3018), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3020), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 3021), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3022), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3028, 3023), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3026), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 3027), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3028), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 3029), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 3030), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 3031), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 3032), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3033), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3035), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3036), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 3037), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 3038), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3040), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 3041), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3043), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3044), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3045), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3046), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3048), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 3049), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3050), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3051), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3052), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3054), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3055), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3056), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3057), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3058), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3060), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3061), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3062), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3064), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3065), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3066), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3068), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3069), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3070), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3071), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3072), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3073), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 3074), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3075), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3076), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3077), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3078), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3079), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3080), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3082), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3083), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3084), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3085), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3086), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3087), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3088), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3090), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3091), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3092), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 3094), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3095), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3096), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3097), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3098), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3100), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3101), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3102), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3103), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3104), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3124, 3105), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3108), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3109), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3110), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3111), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3112), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3113), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3114), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3115), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3116), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3117), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3119), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3100, 3120), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 3123), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3124), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3125), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3126), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3127), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3128), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3129), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3130), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3131), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3132), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3133), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3134), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3135), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3136), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3137), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3138), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3139), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3140), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3141), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3142), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3143), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3145), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3146), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3147), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3148), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3149), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3150), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3151), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3153), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3154), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3155), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 3157), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3158), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3159), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3160), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3161), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3163), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3164), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3165), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3166), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3167), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3187, 3168), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3171), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3172), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3173), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3174), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3175), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3176), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3177), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3178), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3179), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3180), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3182), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3163, 3183), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 3186), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3187), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3188), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3189), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3190), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3191), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3192), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3193), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3194), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 3195), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3196), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3197), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3198), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3199), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3200), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3201), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3202), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3203), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3204), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3206), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3207), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3208), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3209), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3210), Instruction(0xa4, LOG, 0, 6, 0, 1875, Append log record with four topics., None, 3211), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3212), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3213), Instruction(0x9c, SWAP, 0, 14, 14, 3, Exchange 1st and 14th stack items., None, 3215), Instruction(0x9b, SWAP, 0, 13, 13, 3, Exchange 1st and 13th stack items., None, 3216), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3217), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3218), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3219), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3220), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3221), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3222), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3223), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3224), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3225), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3226), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3227), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3228), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 3229), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3230), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3231), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3233), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3234), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3236), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3237), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3239), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3241), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3243), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3244), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3245), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 3246), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 3247), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3256, 3248), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3251), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3252), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3254), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3255), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3256), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3264, 3257), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8800, 3260), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 3263), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3264), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3265), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3266), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3268), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3269), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 3270), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3272), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3273), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3274), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3275), Instruction(0x6a, PUSH, 11, 0, 1, 3, Place 11-byte item on stack., 40729067883558244610880185, 3276), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 169, 3288), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3290), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3291), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3292), Instruction(0x68, PUSH, 9, 0, 1, 3, Place 9-byte item on stack., 649434325459806597817, 3293), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 185, 3303), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3305), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3306), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3308), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3309), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3310), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3311), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3312), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3313), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3314), Instruction(0x6a, PUSH, 11, 0, 1, 3, Place 11-byte item on stack., 40769124918363924898919097, 3315), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 169, 3327), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3329), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3330), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3331), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3332), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3333), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 3334), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3336), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3337), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3338), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 3339), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 3344), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3346), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3347), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3348), Instruction(0x69, PUSH, 10, 0, 1, 3, Place 10-byte item on stack., 196940950624014345548471, 3349), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 177, 3360), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3362), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 3363), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3365), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3366), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3367), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3368), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3369), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3370), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3371), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3372), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3374), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3376), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3378), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3379), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3380), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3381), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3382), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3383), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 3384), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3389), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 3390), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3392), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3393), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3394), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3395), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3396), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3397), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3398), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3399), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3400), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3401), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3402), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3403), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 3404), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3405), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 3406), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3407), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3408), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3409), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3418, 3410), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3413), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3414), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3416), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3417), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3418), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3419), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 3420), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 3421), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3422), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3423), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3424), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3438, 3425), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3428), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3429), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3430), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3432), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 3433), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3434), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3435), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3437), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3438), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3439), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3440), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3441), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3442), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3443), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3445), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3446), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3447), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3449), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3450), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3451), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3460, 3452), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3455), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3456), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3458), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3459), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3460), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3461), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3462), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 3463), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3465), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3466), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3467), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3469), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3471), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3473), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3474), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 3475), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3476), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3477), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3479), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3481), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3483), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3484), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3485), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3486), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3487), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 3488), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3489), Instruction(0x55, SSTORE, 0, 2, 0, 0, Save word to storage., None, 3490), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 3491), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3493), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3494), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3496), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3497), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 3498), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 3503), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3505), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3506), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3507), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 141307501, 3508), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 227, 3513), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3515), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3516), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3517), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3518), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3519), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3520), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3521), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3522), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3523), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3524), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3526), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3527), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3528), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3529), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3530), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3531), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 3532), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3537), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 3538), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3540), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3541), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3542), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3543), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3544), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3546), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3547), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3548), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3549), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3550), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3551), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3552), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3553), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 3554), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3555), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 3556), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3557), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3558), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3559), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3568, 3560), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3563), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3564), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3566), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3567), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3568), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3569), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 3570), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 3571), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3572), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3573), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3574), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3588, 3575), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3578), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3579), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3580), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3582), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 3583), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3584), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3585), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3587), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3588), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3589), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3590), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3591), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3592), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3593), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3595), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3596), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3597), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3599), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3600), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3601), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3610, 3602), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3605), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3606), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3608), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3609), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3610), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3611), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3612), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 3613), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3615), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3616), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3618), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3619), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 3620), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 3625), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3627), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3628), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3629), Instruction(0x65, PUSH, 6, 0, 1, 3, Place 6-byte item on stack., 18796292446301, 3630), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 210, 3637), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3639), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 3640), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3642), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3643), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3644), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3645), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3646), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3647), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3648), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3649), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3650), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3652), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3653), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3655), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3657), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3659), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3660), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3661), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3662), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3663), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3664), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4087267831, 3665), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3670), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 3671), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3673), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3674), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3675), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3676), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3677), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3679), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3680), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3681), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3682), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3683), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3684), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3685), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3686), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3687), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 3688), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3689), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 3690), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3691), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3692), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3693), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3702, 3694), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3697), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3698), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3700), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3701), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3702), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3703), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 3704), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 3705), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3706), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3707), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3708), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3722, 3709), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3712), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3713), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3714), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3716), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 3717), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3718), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3719), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3721), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3722), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3723), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3724), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3725), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3726), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3727), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3729), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3730), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3731), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3733), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3734), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3735), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3744, 3736), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3739), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3740), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3742), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3743), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3744), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3745), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3746), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3747), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3748), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3749), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3751), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 3752), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3754), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3755), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3756), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4155, 3757), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3760), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3761), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 3763), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3765), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 3767), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3768), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 3769), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3771), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 3772), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3778, 3773), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3776), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 3777), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3778), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3779), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3781), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3782), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 3783), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3784), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3785), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3786), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3787), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3788), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3789), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3790), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3791), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3792), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3793), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3794), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3795), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3796), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3797), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3799), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3800), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3801), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3802), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3804), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3805), Instruction(0x20, SHA3, 0, 2, 1, 30, Compute Keccak-256 hash., None, 3806), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3807), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 3808), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3810), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 3811), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3812), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3813), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2720838757, 3814), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 3819), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3821), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3822), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3823), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3824), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3826), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3828), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3830), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3831), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3832), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 3833), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3834), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3835), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3836), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3837), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3838), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3839), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3840), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3841), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 3843), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3845), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3846), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3847), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 3848), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3849), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3850), Instruction(0x95, SWAP, 0, 7, 7, 3, Exchange 1st and 7th stack items., None, 3851), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3852), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3853), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3854), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3855), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3856), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2720838757, 3857), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3862), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 68, 3863), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3865), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3866), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3867), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3868), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3869), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3870), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3871), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3872), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3873), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3874), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3875), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3876), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 3877), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3878), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 3879), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3880), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3881), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3882), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3891, 3883), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3886), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3887), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3889), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3890), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3891), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3892), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 3893), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 3894), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3895), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3896), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3897), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3911, 3898), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3901), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3902), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3903), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3905), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 3906), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 3907), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3908), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3910), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3911), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3912), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3913), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 3914), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3916), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3917), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 157198259, 3918), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 3923), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3925), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3926), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3927), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3928), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 3930), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 3932), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 3934), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3935), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 3936), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3937), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3938), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 3939), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3941), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3942), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3943), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3944), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 3946), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 3947), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 3949), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3950), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 3951), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3952), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 3953), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3954), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 3955), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 3956), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 3957), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3958), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 157198259, 3959), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3964), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 3965), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 68, 3966), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3968), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3969), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3970), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3971), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 3972), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 3974), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3975), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 3976), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3977), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 3978), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 3979), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 3980), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 3981), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 3982), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3983), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 3985), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3986), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 3987), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3988), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3989), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 3990), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3999, 3991), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 3994), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 3995), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 3997), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 3998), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 3999), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4000), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 4001), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 4002), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4003), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4004), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4005), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4019, 4006), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4009), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4010), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4011), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4013), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 4014), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4015), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4016), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4018), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4019), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4020), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4021), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4022), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4023), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4024), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4026), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4027), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4028), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4030), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 4031), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4032), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4041, 4033), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4036), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4037), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4039), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4040), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4041), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4042), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4043), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4044), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4046), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4047), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 686590961, 4048), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 226, 4053), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4055), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4056), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4057), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4058), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4060), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4062), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4064), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4065), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4066), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4067), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4068), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 4069), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4071), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4072), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4073), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4074), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4075), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4076), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 4077), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4078), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4079), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 2746363844, 4080), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4085), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 4086), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4088), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4089), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4090), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4091), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4092), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4094), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4095), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4096), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4097), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4098), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4099), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4100), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4101), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4102), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4103), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 4104), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4105), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 4106), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4107), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4108), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4109), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4118, 4110), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4113), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4114), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4116), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4117), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4118), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4119), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 4120), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 4121), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4122), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4123), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4124), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4138, 4125), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4128), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4129), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4130), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4132), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 4133), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4134), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4135), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4137), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4138), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4139), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4140), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4141), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4143), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 4144), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4145), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4146), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4147), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 3751, 4148), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4151), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4152), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4153), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4154), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4155), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4156), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4157), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4158), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4159), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4160), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4161), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4162), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4163), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4165), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4166), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4168), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4169), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4171), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4173), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4175), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4176), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4177), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 4178), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 4179), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4188, 4180), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4183), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4184), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4186), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4187), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4188), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4189), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4191), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4192), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4193), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 4194), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4196), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4198), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4199), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4201), Instruction(0x20, SHA3, 0, 2, 1, 30, Compute Keccak-256 hash., None, 4202), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4203), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4204), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4206), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4208), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4210), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4211), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4212), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4213), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4272, 4214), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4217), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4218), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4220), Instruction(0x62, PUSH, 3, 0, 1, 3, Place 3-byte item on stack., 4594637, 4221), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 229, 4225), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4227), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4228), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4229), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 4230), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4232), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4233), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4234), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4235), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4237), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4238), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4239), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4240), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4241), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4242), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 61, 4243), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4245), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4246), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4247), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4249), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4250), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8831, 4251), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 61, 4254), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4256), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 4257), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4258), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4260), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4261), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4262), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4263), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4264), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4266), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4267), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4268), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4269), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4270), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4271), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4272), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4290, 4273), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4276), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4277), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4279), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4281), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4283), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4284), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4285), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8794, 4286), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4289), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4290), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4299, 4291), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4294), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4295), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4297), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4298), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4299), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4300), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4301), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4303), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4304), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4305), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 4306), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4308), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4310), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4311), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4313), Instruction(0x20, SHA3, 0, 2, 1, 30, Compute Keccak-256 hash., None, 4314), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4315), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4316), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4317), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4319), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4321), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4323), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4324), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4325), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4326), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4327), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4329), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4331), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4333), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4334), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 4335), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4336), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4337), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4338), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 4339), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4340), Instruction(0x55, SSTORE, 0, 2, 0, 0, Save word to storage., None, 4341), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4342), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4344), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4345), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4346), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4347), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4348), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4349), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4350), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4352), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4353), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4355), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4357), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4359), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4360), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4361), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4362), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4363), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4364), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 4365), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4367), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4368), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4370), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4372), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4374), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4375), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4376), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4377), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4378), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4379), Instruction(0x68, PUSH, 9, 0, 1, 3, Place 9-byte item on stack., 649434325459806597817, 4380), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 185, 4390), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4392), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4393), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4395), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4396), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4397), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 4398), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4400), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4402), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 84667391378384032548618684671753130020421863106249010872878842542535005285833, 4403), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4436), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4437), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4439), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4441), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4443), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4444), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4445), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 4446), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 4447), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4456, 4448), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4451), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4452), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4454), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4455), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4456), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4457), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4458), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4460), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4462), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4464), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4465), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4466), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 4467), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4468), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4470), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4472), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4474), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4475), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4476), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 105814148326167944260651237795617516444161954601859836512964560606975918826352, 4477), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 4510), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 4511), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 4512), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4514), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4516), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4517), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4518), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 256, 4519), Instruction(0xa, EXP, 0, 2, 1, 10, Exponential operation., None, 4522), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4523), Instruction(0x4, DIV, 0, 2, 1, 5, Integer division operation., None, 4524), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4525), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4527), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4529), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4531), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4532), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4533), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4534), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4536), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4538), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4540), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4541), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4542), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 412009302, 4543), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4548), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4550), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4551), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 4552), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4557), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 4558), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4560), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4561), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4562), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 4563), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4565), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4566), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4568), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4570), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4571), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4572), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4573), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4574), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 4575), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4576), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 4577), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4578), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4579), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4580), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4589, 4581), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4584), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4585), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4587), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4588), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4589), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4590), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 4591), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 4592), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4593), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4594), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4595), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4609, 4596), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4599), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4600), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4601), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4603), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 4604), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4605), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4606), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4608), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4609), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4610), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4611), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4612), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4613), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4614), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4616), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4617), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4618), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4620), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 4621), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4622), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4631, 4623), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4626), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4627), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4629), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4630), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4631), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4632), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4633), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4634), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4636), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4637), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 4638), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4639), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4640), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4641), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4642), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4643), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4644), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4645), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4646), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 4647), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4649), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4651), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4652), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4653), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4654), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4655), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4656), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 4657), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4658), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4659), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 4660), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4661), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4662), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4663), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4664), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4665), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 4666), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4667), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 128, 4668), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 4670), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4671), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4672), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 4673), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4674), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4675), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4676), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 4677), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4678), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4679), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4680), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4681), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4683), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4684), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4685), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 4686), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4687), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4707, 4688), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4691), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4692), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4693), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4694), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4695), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4696), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4697), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4698), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4699), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4700), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4702), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4683, 4703), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4706), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4707), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4708), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4709), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4710), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4711), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4712), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4713), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4714), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 4715), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4716), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4717), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4718), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4719), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4720), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4721), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4723), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4724), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4725), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4726), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4727), Instruction(0xa3, LOG, 0, 5, 0, 1500, Append log record with three topics., None, 4728), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4729), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4730), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 4732), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 4733), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4734), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4735), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4736), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4737), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4738), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4739), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 4740), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4742), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4743), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4745), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4747), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4749), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4750), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4751), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4752), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 4753), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4754), Instruction(0x65, PUSH, 6, 0, 1, 3, Place 6-byte item on stack., 87352729236083, 4755), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 208, 4762), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4764), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4765), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4767), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4768), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4769), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 4770), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4772), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4774), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4775), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4777), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4778), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4779), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8892, 4781), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4784), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 4785), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4786), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4787), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4788), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4789), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4790), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4791), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4793), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4795), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4797), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4798), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4799), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 4800), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 4801), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4810, 4802), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4805), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4806), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4808), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4809), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4810), Instruction(0x65, PUSH, 6, 0, 1, 3, Place 6-byte item on stack., 87352729236083, 4811), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 208, 4818), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4820), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4821), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4823), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4824), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4825), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 4826), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4828), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4830), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4831), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4833), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4834), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4835), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8892, 4837), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4840), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 4841), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4842), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4843), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4844), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4845), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 4846), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4847), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4849), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4850), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 811635673, 4851), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 225, 4856), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4858), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4859), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4860), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 4861), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4863), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4864), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 4865), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4866), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4867), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4868), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4869), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4870), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 4872), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 4874), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 4876), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4877), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4878), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4879), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4880), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4881), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4882), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 4883), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4885), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4886), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4887), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 4888), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4889), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1623271346, 4890), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4895), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 4896), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4898), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4899), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4900), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4901), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 4902), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4903), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 4904), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4905), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4906), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4907), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 4908), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4909), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4910), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 4911), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4912), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 4913), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4914), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4915), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4916), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4925, 4917), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4920), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4921), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4923), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4924), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4925), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4926), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 4927), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 4928), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4929), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4930), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4931), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4945, 4932), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4935), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4936), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4937), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4939), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 4940), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4941), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4942), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4944), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4945), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4946), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4947), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4948), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 4949), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4950), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4952), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4953), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4954), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4956), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 4957), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 4958), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 4960), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 4961), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4962), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4963), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 4964), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 4966), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 4967), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 4968), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4969), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4970), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 4972), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 4973), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4975), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 4976), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 4977), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 4986, 4978), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 4981), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 4982), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4984), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 4985), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 4986), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 4987), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4988), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 4989), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 4991), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 4992), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 4993), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4994), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 4995), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 4997), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 4998), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 4999), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5000), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 5001), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5002), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5003), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5004), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5005), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5006), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 5007), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5008), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5010), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5012), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5013), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5014), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5015), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5024, 5016), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5019), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5020), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5022), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5023), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5024), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5025), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5026), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5027), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5028), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5029), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5031), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5032), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 5033), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5034), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5035), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5036), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5045, 5037), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5040), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5041), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5043), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5044), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5045), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5046), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5047), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5048), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5049), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5051), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5052), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5053), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5054), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5055), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5056), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5058), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5060), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5061), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5062), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 5063), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5064), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5073, 5065), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5068), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5069), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5071), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5072), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5073), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5074), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5075), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5076), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5077), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5078), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5079), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5081), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5082), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5083), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5084), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5085), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5086), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5087), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5088), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5089), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5090), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5091), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5092), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5094), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5095), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5096), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5097), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5098), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5118, 5099), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5102), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5103), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5104), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5105), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5106), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5107), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5108), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5109), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5110), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5111), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5113), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5094, 5114), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 5117), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5118), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5119), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5120), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5121), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5122), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5123), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5124), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5125), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5126), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5128), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5129), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5131), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5132), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5133), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5134), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5136), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 5137), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5138), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5139), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5140), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 5141), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5142), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5144), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5146), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5147), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5148), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5149), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5158, 5150), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5153), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5154), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5156), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5157), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5158), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5159), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5160), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5161), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5162), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5163), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5165), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5166), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 5167), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5168), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5169), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5170), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5179, 5171), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5174), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5175), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5177), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5178), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5179), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5180), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5181), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5182), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5183), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5185), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5186), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5187), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5188), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5189), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5190), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5192), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5194), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5195), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5196), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 5197), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5198), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5207, 5199), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5202), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5203), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5205), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5206), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5207), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5208), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5209), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5210), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5211), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5212), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5213), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5215), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5216), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5217), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5218), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5219), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5220), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5221), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5222), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5223), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5224), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5225), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5226), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5228), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5229), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5230), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5231), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5232), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5252, 5233), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5236), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5237), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5238), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5239), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5240), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5241), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5242), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5243), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5244), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5245), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5247), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5228, 5248), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 5251), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5252), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5253), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5254), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5255), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5256), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5257), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5258), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5259), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5260), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5262), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5263), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5264), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5265), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5266), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5267), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5268), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5269), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 5270), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5271), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 5272), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5274), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5276), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 5277), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5278), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 256, 5279), Instruction(0xa, EXP, 0, 2, 1, 10, Exponential operation., None, 5282), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5283), Instruction(0x4, DIV, 0, 2, 1, 5, Integer division operation., None, 5284), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5285), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5287), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5289), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5291), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5292), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5293), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5294), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5296), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5298), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5300), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5301), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5302), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 412009302, 5303), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5308), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5310), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5311), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 5312), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5317), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 5318), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5320), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5321), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5322), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 5323), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5325), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5326), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5328), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5330), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5331), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5332), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5333), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5334), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5335), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5336), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 5337), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5338), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5339), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5340), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5349, 5341), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5344), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5345), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5347), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5348), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5349), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5350), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 5351), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 5352), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5353), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5354), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5355), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5369, 5356), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5359), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5360), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5361), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5363), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 5364), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5365), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5366), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5368), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5369), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5370), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5371), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5372), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5373), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5374), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5376), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5377), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5378), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5380), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5381), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5382), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5391, 5383), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5386), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5387), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5389), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5390), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5391), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5392), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5393), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5394), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5395), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5396), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5397), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 7, 5398), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5400), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5401), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5402), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5408, 5403), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5406), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 5407), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5408), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5409), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5411), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5412), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5413), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5414), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5415), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5416), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5417), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5418), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5419), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5420), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 5422), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5423), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5425), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5427), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5429), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5430), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5431), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 3284753531, 5432), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 5437), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5438), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5440), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5441), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 5442), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5447), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 5448), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5450), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5451), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5452), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 5453), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5455), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5456), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5457), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5458), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5459), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5460), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5462), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5463), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5464), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5465), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5466), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5468), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5470), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5471), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5472), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5473), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5474), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5475), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5476), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 5477), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5478), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5479), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5480), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5489, 5481), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5484), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5485), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5487), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5488), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5489), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5490), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 5491), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 5492), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5493), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5494), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5495), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5509, 5496), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5499), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5500), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5501), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5503), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 5504), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5505), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5506), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5508), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5509), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5510), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5511), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5512), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5513), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5514), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5516), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5517), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5518), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5520), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5521), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5522), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5531, 5523), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5526), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5527), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5529), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5530), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5531), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5532), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5533), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5534), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5536), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5538), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5540), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5541), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5542), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5543), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5544), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5545), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 5546), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5547), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5548), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5550), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5551), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5552), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8924, 5554), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5557), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 5558), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5559), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5560), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5561), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5562), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5563), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5564), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5566), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 5567), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5568), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5574, 5569), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5572), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 5573), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5574), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 5575), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 5576), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 5577), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 5578), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5579), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5581), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5582), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5583), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 5584), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5586), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 5587), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5589), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5590), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5591), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5592), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5594), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 5595), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5596), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5597), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5598), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5600), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 5601), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5602), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5603), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5604), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5606), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5607), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5608), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5610), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5611), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5612), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5614), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5615), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5616), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5617), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5618), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5619), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 5620), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5621), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5622), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5623), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5624), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5625), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5626), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5628), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5629), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5630), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5631), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5632), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5633), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5634), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5636), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5637), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5638), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5640), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5641), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5642), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5643), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5644), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5646), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5647), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5648), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5649), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5650), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5670, 5651), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5654), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5655), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5656), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5657), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5658), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5659), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5660), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5661), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5662), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5663), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5665), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5646, 5666), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 5669), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5670), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5671), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5672), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5673), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5674), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5675), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5676), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5677), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5678), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5679), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5680), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5681), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5682), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 5683), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5684), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5685), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5686), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5687), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5688), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5689), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5691), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5692), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5693), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5694), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5695), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5696), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5697), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5699), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5700), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5701), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5703), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5704), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5705), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5706), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5707), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5709), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5710), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5711), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5712), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5713), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5733, 5714), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5717), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5718), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5719), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5720), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5721), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5722), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5723), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5724), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5725), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5726), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5728), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5709, 5729), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 5732), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5733), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5734), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5735), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5736), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5737), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5738), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5739), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5740), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 5741), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5742), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5743), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5744), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5745), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5746), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5747), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5748), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5749), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5750), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5752), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5753), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5754), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5755), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5756), Instruction(0xa4, LOG, 0, 6, 0, 1875, Append log record with four topics., None, 5757), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5758), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5759), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 5761), Instruction(0x96, SWAP, 0, 8, 8, 3, Exchange 1st and 8th stack items., None, 5762), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5763), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5764), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5765), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5766), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5767), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5768), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5769), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 5770), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5771), Instruction(0x69, PUSH, 10, 0, 1, 3, Place 10-byte item on stack., 426884350516275192095845, 5772), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 176, 5783), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5785), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5786), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5788), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5789), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5790), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 5791), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5793), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5795), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 81114740751673568237548691216676027308829126044657874080888747357273242266068, 5796), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 5829), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5830), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5832), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5834), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5836), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5837), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5838), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 5839), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 5840), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5849, 5841), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5844), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5845), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5847), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5848), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5849), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 5850), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5852), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5854), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 5855), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5856), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 256, 5857), Instruction(0xa, EXP, 0, 2, 1, 10, Exponential operation., None, 5860), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5861), Instruction(0x4, DIV, 0, 2, 1, 5, Integer division operation., None, 5862), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5863), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5865), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5867), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5869), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5870), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5871), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5872), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 5874), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 5876), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5878), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5879), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5880), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 412009302, 5881), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5886), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5888), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5889), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 5890), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 5895), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 5896), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 5898), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5899), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5900), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 5901), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5903), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5904), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5906), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5908), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5909), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5910), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 5911), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5912), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 5913), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5914), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 5915), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5916), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5917), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5918), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5927, 5919), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5922), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5923), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5925), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5926), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5927), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5928), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 5929), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 5930), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5931), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5932), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5933), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5947, 5934), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5937), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5938), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5939), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5941), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 5942), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5943), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5944), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5946), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5947), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5948), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5949), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5950), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5951), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 5952), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5954), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 5955), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5956), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5958), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5959), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 5960), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5969, 5961), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5964), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 5965), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 5967), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 5968), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5969), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 5970), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5971), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 5972), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 5973), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 5974), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5975), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 7, 5976), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5978), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5979), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 5980), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5986, 5981), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 5984), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 5985), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 5986), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 5987), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5989), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 5990), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 5991), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5992), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 5993), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 5994), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5995), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 5996), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 5997), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 5998), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 6000), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6001), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6003), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6005), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6007), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6008), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6009), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 6010), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6011), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6013), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6015), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6017), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6018), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6019), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6020), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6022), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6023), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6024), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8924, 6026), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6029), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 6030), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6031), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6032), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6033), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6034), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 6035), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 6036), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 6037), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 6038), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 6039), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6040), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6042), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6043), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 6044), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 6045), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6047), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 6048), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6050), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6051), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6052), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6053), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6055), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6056), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6057), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6058), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6059), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6061), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 6062), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6063), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6064), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6065), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6067), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6068), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6069), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6071), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6072), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6073), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6075), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6076), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6077), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6078), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6079), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6080), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6081), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6082), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6083), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6084), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6085), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6086), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6087), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6089), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6090), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6091), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6092), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6093), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6094), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6095), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6097), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6098), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6099), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 6101), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6102), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6103), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6104), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6105), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6107), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6108), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 6109), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6110), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5670, 6111), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6114), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6115), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6116), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6117), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6118), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6119), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6120), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6121), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6122), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6123), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6125), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 5646, 6126), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 6129), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6130), Instruction(0x71, PUSH, 18, 0, 1, 3, Place 18-byte item on stack., 6222551505076741652136073582355070376505977, 6131), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 112, 6150), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6152), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6153), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6155), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6156), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6157), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 6158), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6160), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6162), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 26609272677690962993227701484299898222188807007009251506797431346254445455809, 6163), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 6196), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6197), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6199), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6201), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6203), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6204), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6205), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 6206), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 6207), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6216, 6208), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6211), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6212), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6214), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6215), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6216), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6217), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6219), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6220), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6221), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6223), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6225), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6227), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6228), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6229), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6230), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6231), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6232), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6233), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6234), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6235), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6236), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 6237), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6238), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6239), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 50513929762130469044956531583439182066777859970645321049092717301673104335136, 6240), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6273), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6274), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6275), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6276), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6277), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6279), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6280), Instruction(0xa2, LOG, 0, 4, 0, 1125, Append log record with two topics., None, 6281), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6282), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6283), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6284), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6285), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 6286), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6287), Instruction(0x71, PUSH, 18, 0, 1, 3, Place 18-byte item on stack., 6222551505076741652136073582355070376505977, 6288), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 112, 6307), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6309), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6310), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6312), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6313), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6314), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 6315), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6317), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6319), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 26609272677690962993227701484299898222188807007009251506797431346254445455809, 6320), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 6353), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6354), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6356), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6358), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6360), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6361), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6362), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 6363), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 6364), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6373, 6365), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6368), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6369), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6371), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6372), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6373), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6374), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6376), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6377), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6378), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6380), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6382), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6384), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6385), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6386), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6387), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6388), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6389), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6390), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6391), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6392), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6393), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 6394), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6395), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6396), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 105317843479060285318723078757396737460114896200279311980328235668844227151770, 6397), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6430), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6431), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6432), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6433), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6434), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6436), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6437), Instruction(0xa2, LOG, 0, 4, 0, 1125, Append log record with two topics., None, 6438), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6439), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6440), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6441), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6442), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 6443), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6444), Instruction(0x6a, PUSH, 11, 0, 1, 3, Place 11-byte item on stack., 40729067883558244610880185, 6445), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 169, 6457), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6459), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6460), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6462), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6463), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6464), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 6465), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6467), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6469), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 64892514851907897009934748793020566222994160930701906390851435138376436778679, 6470), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 6503), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6504), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6506), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6508), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6510), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6511), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6512), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 6513), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 6514), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6523, 6515), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6518), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6519), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6521), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6522), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6523), Instruction(0x65, PUSH, 6, 0, 1, 3, Place 6-byte item on stack., 87352729236083, 6524), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 208, 6531), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6533), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6534), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6536), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6537), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6538), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 6539), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6541), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6543), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6544), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6546), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6547), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6548), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8892, 6550), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6553), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 6554), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6555), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6556), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6557), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6558), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 6559), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6560), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6562), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6563), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 811635673, 6564), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 225, 6569), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6571), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6572), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6573), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 6574), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6576), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6577), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 6578), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6579), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6580), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6581), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6582), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6583), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6585), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 6587), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6589), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6590), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6591), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6592), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6593), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6594), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6595), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 6596), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6598), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6599), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6600), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6601), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6602), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1623271346, 6603), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6608), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 6609), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6611), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6612), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6613), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6614), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 6615), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6616), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6617), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6618), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6619), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6620), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 6621), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6622), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6623), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 6624), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6625), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 6626), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6627), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6628), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6629), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6638, 6630), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6633), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6634), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6636), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6637), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6638), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6639), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 6640), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 6641), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6642), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6643), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6644), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6658, 6645), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6648), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 6649), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6650), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6652), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 6653), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 6654), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6655), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6657), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6658), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6659), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6660), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6661), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6662), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6663), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6665), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 6666), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6667), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6669), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 6670), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 6671), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 6673), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6674), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6675), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6676), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 6677), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 6679), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 6680), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6681), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6682), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6683), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6685), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 6686), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6688), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 6689), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6690), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6699, 6691), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6694), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6695), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6697), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6698), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6699), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6700), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6701), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6702), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6704), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6705), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6706), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6707), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6708), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6710), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6711), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 6712), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6713), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 6714), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6715), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6716), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6717), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6718), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6719), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 6720), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6721), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6723), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6725), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6726), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6727), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6728), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6737, 6729), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6732), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6733), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6735), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6736), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6737), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6738), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6739), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6740), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6741), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6742), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6744), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6745), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6746), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6747), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6748), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6749), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6758, 6750), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6753), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6754), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6756), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6757), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6758), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6759), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6760), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 6761), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6762), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6764), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 6765), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6766), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6767), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6768), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6769), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6771), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6773), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6774), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6775), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 6776), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6777), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6786, 6778), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6781), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6782), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6784), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6785), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6786), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6787), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6788), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6789), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6790), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6791), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6792), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6794), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6795), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6796), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6797), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6798), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6799), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6800), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 6801), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6802), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6803), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6804), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6805), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6807), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6808), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6809), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 6810), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6811), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6831, 6812), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6815), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6816), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6817), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6818), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6819), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6820), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6821), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6822), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6823), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6824), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6826), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6807, 6827), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 6830), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6831), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6832), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6833), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6834), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6835), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6836), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6837), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6838), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6839), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6841), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6842), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6844), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6845), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6846), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6847), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6849), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 6850), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6851), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6852), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6853), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 6854), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6855), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6857), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6859), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6860), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6861), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6862), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6871, 6863), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6866), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6867), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6869), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6870), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6871), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6872), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6873), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6874), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6875), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6876), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6878), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6879), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 6880), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6881), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6882), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6883), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6892, 6884), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6887), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6888), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6890), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6891), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6892), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6893), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6894), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 6895), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6896), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6898), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 6899), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6900), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6901), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6902), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 6903), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6905), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 6907), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6908), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 6909), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 6910), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6911), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6920, 6912), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6915), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6916), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6918), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 6919), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6920), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6921), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6922), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6923), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6924), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6925), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6926), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6928), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6929), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6930), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6931), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6932), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6933), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 6934), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 6935), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 6936), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6937), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6938), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6939), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6941), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6942), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6943), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 6944), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 6945), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6965, 6946), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6949), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6950), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6951), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6952), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6953), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 6954), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6955), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6956), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6957), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6958), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6960), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6941, 6961), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 6964), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6965), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6966), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6967), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6968), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6969), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 6970), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6971), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 6972), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 6973), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 6975), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6976), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6977), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6978), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6979), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6980), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6981), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6982), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 6983), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 6984), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 6985), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 6986), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 6987), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6989), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 6990), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 6991), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 6992), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 6998, 6993), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 6996), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 6997), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 6998), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 6999), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7001), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7002), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7004), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7005), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7006), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7007), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7009), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7011), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7013), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7014), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7015), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7016), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7017), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7018), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7020), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7022), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7024), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7025), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7026), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7027), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7028), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7029), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7030), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 7031), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7032), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 7033), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7035), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7036), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7037), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7038), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7044, 7039), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7042), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 7043), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7044), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7045), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7047), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7048), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7050), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7051), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7052), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7053), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7054), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7055), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7056), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 7057), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7058), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 7059), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7061), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7062), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7063), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7064), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7070, 7065), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7068), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 7069), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7070), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7071), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7073), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7074), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7075), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7076), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7077), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7078), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7079), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7080), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7081), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7082), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7083), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7084), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7085), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 7086), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 7088), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7089), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7091), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7092), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 206004651, 7093), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 225, 7098), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7100), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7101), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7102), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7103), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7104), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7105), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7107), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7109), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7111), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7112), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7113), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 7114), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7115), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 7116), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 412009302, 7117), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 7122), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 7123), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7125), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7126), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7127), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 7128), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7129), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7130), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7131), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7132), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7133), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 7134), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7135), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 7136), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7137), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7138), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7139), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7148, 7140), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7143), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7144), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7146), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7147), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7148), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7149), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 7150), Instruction(0xfa, STATICCALL, 0, 6, 1, 40, Static message-call into an account., None, 7151), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7152), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7153), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7154), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7168, 7155), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7158), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7159), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7160), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7162), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 7163), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7164), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7165), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7167), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7168), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7169), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7170), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7171), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7172), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7173), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7175), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7176), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7177), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7179), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7180), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7181), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7190, 7182), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7185), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7186), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7188), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7189), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7190), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7191), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7192), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7193), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7194), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7195), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7196), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 7, 7197), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7199), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7200), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7201), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7207, 7202), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7205), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 7206), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7207), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7208), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7210), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7211), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7212), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7213), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7214), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7215), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7216), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7217), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7218), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7219), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 7221), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7222), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7224), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7226), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7228), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7229), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7230), Instruction(0x8c, DUP, 0, 13, 14, 3, Duplicate 13th stack item., None, 7231), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7232), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7234), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7236), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7238), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7239), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7240), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7241), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7243), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7244), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7245), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8924, 7247), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7250), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 7251), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7252), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7253), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7254), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7255), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 7256), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7257), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7259), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 7260), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7261), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7267, 7262), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7265), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 7266), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7267), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 7268), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7269), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 7271), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 7272), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7273), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7275), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7276), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 7277), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 7278), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7280), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 255, 7281), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7283), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7284), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7285), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7286), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7288), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 7289), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7290), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7291), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7292), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7294), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7295), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7296), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7298), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7299), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7300), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7301), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7303), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7304), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7305), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7307), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7308), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7309), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7311), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7312), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7313), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7314), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7315), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7316), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 7317), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7318), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7319), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7320), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7321), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7322), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7323), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7325), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7326), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7327), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7328), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7329), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7330), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7331), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7333), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7334), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7335), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7337), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7338), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7339), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7340), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7341), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7343), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7344), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7345), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7346), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7347), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7367, 7348), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7351), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7352), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7353), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7354), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7355), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7356), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7357), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7358), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7359), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7360), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7362), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7343, 7363), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 7366), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7367), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7368), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7369), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7370), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7371), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7372), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7373), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7374), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7375), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7376), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7377), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7378), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7379), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7380), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7381), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7382), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7383), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7384), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7385), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7386), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7388), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7389), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7390), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7391), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7392), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7393), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7394), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7396), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7397), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7398), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7400), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7401), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7402), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7403), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7404), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7406), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7407), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7408), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7409), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7410), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7430, 7411), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7414), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7415), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7416), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7417), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7418), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7419), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7420), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7421), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7422), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7423), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7425), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7406, 7426), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 7429), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7430), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7431), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7432), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7433), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7434), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7435), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7436), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7437), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 7438), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7439), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7440), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7441), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7442), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7443), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7444), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7445), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7446), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7447), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7449), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7450), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7451), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7452), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7453), Instruction(0xa4, LOG, 0, 6, 0, 1875, Append log record with four topics., None, 7454), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7455), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7456), Instruction(0x9a, SWAP, 0, 12, 12, 3, Exchange 1st and 12th stack items., None, 7458), Instruction(0x99, SWAP, 0, 11, 11, 3, Exchange 1st and 11th stack items., None, 7459), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7460), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7461), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7462), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7463), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7464), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7465), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7466), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7467), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7468), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7469), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 7470), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7471), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7472), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7474), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7475), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7476), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7477), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7478), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7479), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8131, 7480), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7483), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 7484), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 7486), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 7487), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7489), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7490), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7492), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7494), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7496), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7497), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7498), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4023599809, 7499), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 7504), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 7505), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 7506), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7507), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7508), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7509), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7515, 7510), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7513), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 7514), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7515), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7516), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7518), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7519), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7520), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7522), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 7524), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7526), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7527), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 7528), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 7529), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 7531), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7532), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7533), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7534), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7535), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7536), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7537), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7539), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7541), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7543), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7544), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7545), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7547), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 7548), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7549), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 7550), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7551), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 7552), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7553), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 7554), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7555), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7556), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 7557), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 7559), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7560), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7561), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7562), Instruction(0x8a, DUP, 0, 11, 12, 3, Duplicate 11th stack item., None, 7563), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7564), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 7565), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7567), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7568), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7569), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 68, 7570), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7572), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7573), Instruction(0x89, DUP, 0, 10, 11, 3, Duplicate 10th stack item., None, 7574), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7575), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7576), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7577), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 100, 7578), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7580), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7581), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7582), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 7583), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7584), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 7586), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7587), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7588), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7589), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7590), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7591), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7592), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7593), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 7594), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7595), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 7596), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7597), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7598), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7599), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7608, 7600), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7603), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7604), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7606), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7607), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7608), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7609), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 7610), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 7611), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7612), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7613), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7614), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7628, 7615), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7618), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7619), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7620), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7622), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 7623), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7624), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7625), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7627), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7628), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7629), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7630), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7631), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7632), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7633), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7635), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7636), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7637), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7639), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 7640), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 7641), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 7643), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7644), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7645), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7646), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 7647), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 7649), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7650), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7651), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7652), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7653), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7655), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7656), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7658), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7659), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7660), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7669, 7661), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7664), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7665), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7667), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7668), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7669), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7670), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7671), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7672), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7673), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7674), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7675), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7676), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7678), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 7679), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 7680), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7681), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7682), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7683), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7684), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7686), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7688), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7689), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 7690), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7691), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7700, 7692), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7695), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7696), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7698), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7699), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7700), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7701), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7702), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7703), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7704), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7705), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7707), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7708), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 7709), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7710), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 7711), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7712), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7721, 7713), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7716), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7717), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7719), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7720), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7721), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7722), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7723), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 7724), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7725), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7727), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7728), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7729), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7730), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 7731), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7732), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7734), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7736), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7737), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 7738), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 7739), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7740), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7749, 7741), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7744), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7745), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7747), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 7748), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7749), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7750), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7751), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7752), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7753), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7754), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7755), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7757), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7758), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7759), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 7760), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7761), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7762), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7763), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7764), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7765), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7766), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7767), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7768), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7770), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7771), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7772), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7773), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 7774), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7794, 7775), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7778), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7779), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7780), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7781), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7782), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7783), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7784), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7785), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7786), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7787), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7789), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7770, 7790), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 7793), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7794), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7795), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7796), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7797), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7798), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7799), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7800), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7801), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7802), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7803), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7805), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7806), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7807), Instruction(0x69, PUSH, 10, 0, 1, 3, Place 10-byte item on stack., 379900274673308559962995, 7808), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 176, 7819), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7821), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 7822), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7824), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7825), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7826), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 7827), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7829), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7831), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 66091360056728588837171336519962676612515632458147627600000562373560729829522, 7832), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 7865), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7866), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7867), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7868), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7869), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7871), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7873), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7875), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7876), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7877), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1168540859, 7878), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 7883), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 7884), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 7885), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7886), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7887), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 7888), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7894, 7889), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 7892), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 7893), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 7894), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 7895), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7896), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7897), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 7899), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7900), Instruction(0x35, CALLDATALOAD, 0, 1, 1, 3, Get input data of current environment., None, 7901), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7902), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7904), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7906), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7908), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7909), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7910), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 7911), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7912), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 7913), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7915), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7916), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4294967295, 7917), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7922), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 7923), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7925), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7926), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7927), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 7928), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7930), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7931), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 7932), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7933), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7935), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7937), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7939), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7940), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7941), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7942), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7944), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7946), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7948), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7949), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7950), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7951), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7952), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7953), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7955), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7956), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7957), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7959), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7961), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7963), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7964), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7965), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7966), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 7968), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 7970), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 7972), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7973), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 7974), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7975), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7976), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7977), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7979), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 7980), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7981), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7983), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7984), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7985), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 7986), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 7987), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7988), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 7989), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7990), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7991), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 7992), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 7993), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 7994), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 7995), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 7997), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 7998), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 7999), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8000), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8001), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8002), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8003), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8005), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8006), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8007), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 8009), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8010), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8011), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8012), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8013), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8015), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8016), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8017), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 8018), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8019), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8039, 8020), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8023), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8024), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8025), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8026), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8027), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8028), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8029), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8030), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8031), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8032), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8034), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8015, 8035), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8038), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8039), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8040), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8041), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8042), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8043), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8044), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8045), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8046), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8047), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8048), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8049), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8050), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8051), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8052), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8053), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8055), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8057), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8058), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8059), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8060), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8061), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8062), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8064), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8065), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 8066), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8067), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8068), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8069), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8078, 8070), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8073), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8074), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8076), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8077), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8078), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8079), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 8080), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 8081), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8082), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8083), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8084), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8098, 8085), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8088), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8089), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8090), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8092), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 8093), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8094), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8095), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8097), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8098), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8099), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8100), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8101), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8102), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8103), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8105), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8106), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8107), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8109), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 8110), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8111), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8120, 8112), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8115), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8116), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8118), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8119), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8120), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8121), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8122), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8123), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8124), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8126), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 7475, 8127), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8130), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8131), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8132), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8133), Instruction(0x95, SWAP, 0, 7, 7, 3, Exchange 1st and 7th stack items., None, 8135), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8136), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8137), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8138), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8139), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8140), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8141), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8142), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8143), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8144), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 8146), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8147), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8149), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8150), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8152), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 8154), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8156), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8157), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8158), Instruction(0x33, CALLER, 0, 0, 1, 2, Get caller address., None, 8159), Instruction(0x14, EQ, 0, 2, 1, 3, Equality comparision., None, 8160), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8169, 8161), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8164), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8165), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8167), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8168), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8169), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8170), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8171), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8173), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 8174), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8175), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8177), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 8179), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8181), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8182), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 8183), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8184), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8185), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 8186), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8187), Instruction(0x55, SSTORE, 0, 2, 0, 0, Save word to storage., None, 8188), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8189), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8190), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8191), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 8192), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8194), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 8195), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8196), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8198), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8199), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4023599809, 8200), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 8205), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8207), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8208), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8209), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8210), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8212), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 8214), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8216), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8217), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8218), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8219), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8220), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8221), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8222), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8223), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8224), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8225), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8226), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8227), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 8228), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 8229), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8230), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 8231), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8233), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8234), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8235), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 68, 8236), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8238), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8239), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 8240), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8241), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8242), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8243), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8244), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8245), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 8247), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 8248), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 8250), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8251), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8252), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 4023599809, 8253), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8258), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 100, 8259), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8261), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8262), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8263), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8264), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8265), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8266), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8267), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8268), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8269), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8270), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8271), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8272), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8273), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8274), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8275), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8276), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 8277), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8278), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8279), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8280), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8289, 8281), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8284), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8285), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8287), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8288), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8289), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8290), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 8291), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 8292), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8293), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8294), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8295), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8309, 8296), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8299), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8300), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8301), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8303), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 8304), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8305), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8306), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8308), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8309), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8310), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8311), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8312), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8313), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8314), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8316), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8317), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8318), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8320), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 8321), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 8322), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8324), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8325), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8326), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8327), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 31, 8328), Instruction(0x19, NOT, 0, 1, 1, 3, Bitwise NOT operation., None, 8330), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8331), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8332), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8333), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8334), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8336), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8337), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8339), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 8340), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8341), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8350, 8342), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8345), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8346), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8348), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8349), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8350), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8351), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8352), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8353), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8354), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8355), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8356), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8357), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8359), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 8360), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8361), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8362), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8363), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 8364), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8365), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8367), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8369), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8370), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 8371), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8372), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8381, 8373), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8376), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8377), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8379), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8380), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8381), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8382), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8383), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8384), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8385), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8386), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8388), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8389), Instruction(0x85, DUP, 0, 6, 7, 3, Duplicate 6th stack item., None, 8390), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8391), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 8392), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8393), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8402, 8394), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8397), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8398), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8400), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8401), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8402), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8403), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8404), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 8405), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8406), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8408), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 8409), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8410), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8411), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 8412), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8413), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8415), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8417), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8418), Instruction(0x11, GT, 0, 2, 1, 3, Greater-than comparision., None, 8419), Instruction(0x17, OR, 0, 2, 1, 3, Bitwise OR operation., None, 8420), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8421), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8430, 8422), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8425), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8426), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8428), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8429), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8430), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8431), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8432), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8433), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8434), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8435), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8436), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8438), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8439), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8440), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8441), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8442), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8443), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8444), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 8445), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8446), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8447), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8448), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8449), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8451), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8452), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8453), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 8454), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8455), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8475, 8456), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8459), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8460), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8461), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8462), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8463), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8464), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8465), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8466), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8467), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8468), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8470), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8451, 8471), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8474), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8475), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8476), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8477), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8478), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8479), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8480), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8481), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8482), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8483), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8484), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8486), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8487), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8488), Instruction(0x69, PUSH, 10, 0, 1, 3, Place 10-byte item on stack., 379900274673308559962995, 8489), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 176, 8500), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8502), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8503), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8505), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8506), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8507), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 8508), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8510), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8512), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8513), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8514), Instruction(0x7f, PUSH, 32, 0, 1, 3, Place 32-byte (full word) item on stack., 66091360056728588837171336519962676612515632458147627600000562373560729829522, 8515), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 8548), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1168540859, 8549), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 224, 8554), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8556), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 8557), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8558), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8559), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8561), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 8563), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8565), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8566), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 8567), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8568), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8569), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 4, 8570), Instruction(0x86, DUP, 0, 7, 8, 3, Duplicate 7th stack item., None, 8572), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8573), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8574), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8575), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8576), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 8577), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8578), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8579), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 36, 8580), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8582), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8583), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8584), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 8585), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 68, 8587), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8589), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8590), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8591), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8592), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8593), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 8594), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8595), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 100, 8596), Instruction(0x88, DUP, 0, 9, 10, 3, Duplicate 9th stack item., None, 8598), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8599), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8600), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 8601), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8602), Instruction(0x9b, SWAP, 0, 13, 13, 3, Exchange 1st and 13th stack items., None, 8603), Instruction(0x9c, SWAP, 0, 14, 14, 3, Exchange 1st and 14th stack items., None, 8604), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8605), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8606), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8607), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8608), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8609), Instruction(0x99, SWAP, 0, 11, 11, 3, Exchange 1st and 11th stack items., None, 8610), Instruction(0x63, PUSH, 4, 0, 1, 3, Place 4-byte item on stack., 1168540859, 8611), Instruction(0x99, SWAP, 0, 11, 11, 3, Exchange 1st and 11th stack items., None, 8616), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8617), Instruction(0x8f, DUP, 0, 16, 17, 3, Duplicate 16th stack item., None, 8618), Instruction(0x98, SWAP, 0, 10, 10, 3, Exchange 1st and 10th stack items., None, 8619), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8620), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 8621), Instruction(0x97, SWAP, 0, 9, 9, 3, Exchange 1st and 9th stack items., None, 8622), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8623), Instruction(0x8b, DUP, 0, 12, 13, 3, Duplicate 12th stack item., None, 8624), Instruction(0x96, SWAP, 0, 8, 8, 3, Exchange 1st and 8th stack items., None, 8625), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8626), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8627), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8628), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8629), Instruction(0x93, SWAP, 0, 5, 5, 3, Exchange 1st and 5th stack items., None, 8630), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 132, 8631), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8633), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8634), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8635), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8636), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8637), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8638), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8639), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8640), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 8641), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8642), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8643), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8644), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 8645), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8646), Instruction(0x84, DUP, 0, 5, 6, 3, Duplicate 5th stack item., None, 8647), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8648), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8649), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8650), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8651), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 8652), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8653), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8673, 8654), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8657), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8658), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8659), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8660), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8661), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8662), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8663), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8664), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8665), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8666), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8668), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8649, 8669), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8672), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8673), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8674), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8675), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8676), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8677), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8678), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8679), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8680), Instruction(0x94, SWAP, 0, 6, 6, 3, Exchange 1st and 6th stack items., None, 8681), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8682), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8683), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8684), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8685), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8686), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8687), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8689), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8691), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8692), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8693), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8694), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8695), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8696), Instruction(0x87, DUP, 0, 8, 9, 3, Duplicate 8th stack item., None, 8698), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8699), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 8700), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8701), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8702), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8703), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8712, 8704), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8707), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8708), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8710), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8711), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8712), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8713), Instruction(0x5a, GAS, 0, 0, 1, 2, Get the amount of available gas, including the corresponding reduction the amount of available gas., None, 8714), Instruction(0xf1, CALL, 0, 7, 1, 700, Message-call into an account., None, 8715), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8716), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8717), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8718), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8732, 8719), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8722), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8723), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8724), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8726), Instruction(0x3e, RETURNDATACOPY, 0, 3, 0, 3, Copy output data from the previous call to memory., None, 8727), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8728), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8729), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8731), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8732), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8733), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8734), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8735), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8736), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8737), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8739), Instruction(0x3d, RETURNDATASIZE, 0, 0, 1, 2, Get size of output data from the previous call from the current environment., None, 8740), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8741), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8743), Instruction(0x10, LT, 0, 2, 1, 3, Less-than comparision., None, 8744), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8745), Instruction(0x61, PUSH, 2, 0, 1, 3, Place 2-byte item on stack., 8754, 8746), Instruction(0x57, JUMPI, 0, 2, 0, 10, Conditionally alter the program counter., None, 8749), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8750), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8752), Instruction(0xfd, REVERT, 0, 2, 0, 0, Stop execution and revert state changes, without consuming all provided gas and providing a reason., None, 8753), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8754), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8755), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8756), Instruction(0x96, SWAP, 0, 8, 8, 3, Exchange 1st and 8th stack items., None, 8758), Instruction(0x95, SWAP, 0, 7, 7, 3, Exchange 1st and 7th stack items., None, 8759), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8760), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8761), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8762), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8763), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8764), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8765), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8766), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8767), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 0, 8768), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8770), Instruction(0x81, DUP, 0, 2, 3, 3, Duplicate 2nd stack item., None, 8771), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8772), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 2, 8773), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8775), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8777), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8778), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8780), Instruction(0x20, SHA3, 0, 2, 1, 30, Compute Keccak-256 hash., None, 8781), Instruction(0x54, SLOAD, 0, 1, 1, 200, Load word from storage., None, 8782), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8783), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 1, 8785), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 160, 8787), Instruction(0x1b, SHL, 0, 2, 1, 3, Shift left., None, 8789), Instruction(0x3, SUB, 0, 2, 1, 3, Subtraction operation., None, 8790), Instruction(0x16, AND, 0, 2, 1, 3, Bitwise AND operation., None, 8791), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8792), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8793), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8794), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 8795), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8796), Instruction(0x15, ISZERO, 0, 1, 1, 3, Simple not operator., None, 8797), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8798), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8799), Instruction(0x5b, JUMPDEST, 0, 0, 0, 1, Mark a valid destination for jumps., None, 8800), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8801), Instruction(0x51, MLOAD, 0, 1, 1, 3, Load word from memory., None, 8803), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8804), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 96, 8805), Instruction(0x1, ADD, 0, 2, 1, 3, Addition operation., None, 8807), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 64, 8808), Instruction(0x52, MSTORE, 0, 2, 0, 3, Save word to memory., None, 8810), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8811), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 3, 8812), Instruction(0x90, SWAP, 0, 2, 2, 3, Exchange 1st and 2nd stack items., None, 8814), Instruction(0x60, PUSH, 1, 0, 1, 3, Place 1 byte item on stack., 32, 8815), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8817), Instruction(0x2, MUL, 0, 2, 1, 5, Multiplication operation., None, 8818), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8819), Instruction(0x38, CODESIZE, 0, 0, 1, 2, Get size of code running in current environment., None, 8820), Instruction(0x83, DUP, 0, 4, 5, 3, Duplicate 4th stack item., None, 8821), Instruction(0x39, CODECOPY, 0, 3, 0, 3, Copy code running in current environment to memory., None, 8822), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8823), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8824), Instruction(0x92, SWAP, 0, 4, 4, 3, Exchange 1st and 4th stack items., None, 8825), Instruction(0x91, SWAP, 0, 3, 3, 3, Exchange 1st and 3rd stack items., None, 8826), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8827), Instruction(0x50, POP, 0, 1, 0, 2, Remove item from stack., None, 8828), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8829), Instruction(0xfe, INVALID, 0, 0, 0, 0, Designated invalid instruction., None, 8830), Instruction(0x41, COINBASE, 0, 0, 1, 2, Get the block's beneficiary address., None, 8831), Instruction(0x75, PUSH, 22, 0, 1, 3, Place 22-byte item on stack., 38708522725456423412035137745946187009553952905902624, 8832), Instruction(0x6b, PUSH, 12, 0, 1, 3, Place 12-byte item on stack., 31404419057340049412586628449, 8855), Instruction(0x64, PUSH, 5, 0, 1, 3, Place 5-byte item on stack., 520234362213, 8868), Instruction(0x6e, PUSH, 15, 0, 1, 3, Place 15-byte item on stack., 168535684014462504439763718592099188, 8874), Instruction(0x72, PUSH, 19, 0, 1, 3, Place 19-byte item on stack., 2708212769816374953471660830808661611333588060, 8890), Instruction(0x56, JUMP, 0, 1, 0, 8, Alter the program counter., None, 8910), Instruction(0xd6, INVALID, 0, 0, 0, 0, Unspecified invalid instruction., None, 8911), Instruction(0x8e, DUP, 0, 15, 16, 3, Duplicate 15th stack item., None, 8912), Instruction(0x82, DUP, 0, 3, 4, 3, Duplicate 3rd stack item., None, 8913), Instruction(0x3b, EXTCODESIZE, 0, 1, 1, 700, Get size of an account's code., None, 8914), Instruction(0x44, DIFFICULTY, 0, 0, 1, 2, Get the block's difficulty., None, 8915), Instruction(0xcb, INVALID, 0, 0, 0, 0, Unspecified invalid instruction., None, 8916), Instruction(0x80, DUP, 0, 1, 2, 3, Duplicate 1st stack item., None, 8917), Instruction(0xf7, INVALID, 0, 0, 0, 0, Unspecified invalid instruction., None, 8918), Instruction(0xf8, INVALID, 0, 0, 0, 0, Unspecified invalid instruction., None, 8919), Instruction(0x9, MULMOD, 0, 3, 1, 8, Modulo multiplication operation., None, 8920), Instruction(0xde, INVALID, 0, 0, 0, 0, Unspecified invalid instruction., None, 8921), Instruction(0xe, INVALID, 0, 0, 0, 0, Unspecified invalid instruction., None, 8922), Instruction(0x74, PUSH, 21, 0, 1, 3, Place 21-byte item on stack., 227509424037038257157716599803773730802818124259178, 8923), Instruction(0xf0, CREATE, 0, 3, 1, 32000, Create a new account with associated code., None, 8945), Instruction(0x13, SGT, 0, 2, 1, 3, Signed greater-than comparision., None, 8946), Instruction(0x9d, SWAP, 0, 15, 15, 3, Exchange 1st and 15th stack items., None, 8947)]